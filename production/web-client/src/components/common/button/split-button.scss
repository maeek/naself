button.split-button {
  display: flex;
  align-items: center;
  justify-content: flex-start;
  width: auto;
  border-radius: var(--th-border-radius);
  outline-offset: 0.3rem;
  outline-color: var(--th-clr-accent-border);
  transition:
    outline-offset 0.15s ease-in-out,
    background-color 0.05s ease-out,
    border-color 0.05s ease-out,
    color 0.05s ease-out;
  border: 0.1rem solid transparent;
  padding: 0 0.8rem;
  user-select: none;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.split-button {
  &__arrow {
    width: 2.5rem;
    padding: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
    border-top-right-radius: var(--th-border-radius);
    border-bottom-right-radius: var(--th-border-radius);
    transition:
      background-color 0.05s ease-out,
      border-color 0.05s ease-out,
      color 0.05s ease-out,
      transform 0.1s ease;

    > svg {
      transition: transform 0.2s ease;
    }
  }

  &__container {
    display: flex;
    align-items: stretch;
    overflow: initial;
    position: relative;
  }

  &__options {
    position: absolute;
    bottom: calc(100% + 0.1rem);
    right: 0;
    width: 100%;
    padding: 0.4rem 0;
    background-color: var(--th-clr-split-button-bg);
    border-radius: var(--th-border-radius);
    display: flex;
    flex-direction: column;
    gap: 0.05rem;
    transform: translateY(0.5rem);
    opacity: 0;
    pointer-events: none;
    transition:
      transform ease,
      opacity ease;
    min-width: max-content;
    max-width: 95vw;
    transition-duration: 0.05s;
    box-shadow: 0 0 0.2rem var(--th-clr-bg-semi-transparent);

    &--right {
      right: 0;
    }

    &--left {
      left: 0;
    }

    &__item {
      display: none;
      align-items: center;
      justify-content: flex-start;
      color: var(--th-clr-split-button-text);
      border-radius: 0;
      transition:
        background-color 0.05s ease-out,
        border-color 0.05s ease-out,
        color 0.05s ease-out;
      cursor: pointer;
      width: 100%;
      outline-offset: 0.3rem;

      > button {
        padding: 0.5rem 0.6rem;
        width: 100%;
        height: 100%;

        .split-button__options__item__description {
          color: var(--th-clr-placeholder-text);
          margin-top: 0.3rem;
        }
      }

      &:hover,
      &:focus-within {
        background-color: var(--th-clr-split-button-hover-bg);
        border-color: var(--th-clr-split-button-hover-border);
        color: var(--th-clr-split-button-hover-text);
      }

      &:focus-within {
        outline-offset: 0.1rem;
      }
    }
  }

  &__arrow:focus-within &__options {
    opacity: 1;
    pointer-events: auto;
    transform: translateY(0);
    transition-duration: 0.1s;
  }

  &__arrow:focus-within &__options &__options__item {
    display: flex;
  }

  &__arrow:focus-within > svg {
    transform: rotate(-180deg);
  }

  .split-button__prefix {
    margin-right: 0.5rem;
  }

  .split-button__suffix {
    margin-left: 0.5rem;
  }

  .split-button__prefix,
  .split-button__suffix {
    display: flex;
    align-items: center;
    justify-content: center;
  }

  // Sizes
  // -------------------------
  &.split-button--small {
    font-size: 0.75rem;
    font-weight: 500;
    gap: 0.2rem;

    .split-button__content {
      padding: 0.4rem 0;
    }

    .split-button__prefix {
      > svg {
        width: 0.9rem;
        height: 0.9rem;
      }
    }

    ~ .split-button__arrow {
      width: 2rem;

      .split-button__options {
        font-size: 0.8rem;
      }

      .split-button__options__item__description {
        font-size: 0.7rem;
      }

      > svg {
        width: 0.9rem;
      }
    }
  }

  &.split-button--medium {
    font-size: 0.9rem;
    font-weight: 500;
    gap: 0.2rem;

    .split-button__content {
      padding: 0.5rem 0;
    }

    .split-button__prefix {
      > svg {
        width: 1.1rem;
        height: 1.1rem;
      }
    }

    ~ .split-button__arrow {
      width: 2.25rem;

      .split-button__options {
        font-size: 0.9rem;
      }

      .split-button__options__item__description {
        font-size: 0.8rem;
      }

      > svg {
        width: 1rem;
      }
    }
  }

  &.split-button--large {
    font-size: 1rem;
    font-weight: 600;
    gap: 0.4rem;

    .split-button__content {
      padding: 0.6rem 0;
    }

    .split-button__prefix {
      > svg {
        width: 1.4rem;
        height: 1.4rem;
      }
    }

    ~ .split-button__arrow {
      width: 2.5rem;

      .split-button__options {
        font-size: 1rem;
      }

      .split-button__options__item__description {
        font-size: 1rem;
      }

      > svg {
        width: 1.2rem;
      }
    }
  }

  // Variants
  // -------------------------
  $variants: 'primary', 'secondary', 'success', 'info', 'danger', 'warning';
  @each $variant in $variants {
    &.split-button--#{$variant} {
      background-color: var(--th-clr-button-#{$variant}-bg);
      border-color: var(--th-clr-button-#{$variant}-border);
      color: var(--th-clr-button-#{$variant}-text);

      ~ .split-button__arrow {
        background-color: var(--th-clr-split-button-#{$variant}-bg);
        border-color: var(--th-clr-split-button-#{$variant}-border);
        color: var(--th-clr-split-button-#{$variant}-text);

        &:hover,
        &:focus-within {
          background-color: var(--th-clr-split-button-#{$variant}-hover-bg);
          border-color: var(--th-clr-split-button-#{$variant}-hover-border);
          color: var(--th-clr-split-button-#{$variant}-hover-text);
        }
      }

      &:hover {
        background-color: var(--th-clr-button-#{$variant}-hover-bg);
        border-color: var(--th-clr-button-#{$variant}-hover-border);
        color: var(--th-clr-button-#{$variant}-hover-text);
      }
    }
  }

  [aria-disabled='true'] &,
  &[aria-disabled='true'] {
    background-color: var(--th-clr-gray-darken-1);
    border-color: var(--th-clr-gray-darken-1);
    color: var(--th-clr-disabled-text);

    &,
    & > * {
      cursor: not-allowed;
    }

    &:hover {
      background-color: var(--th-clr-gray-darken-1);
      border-color: var(--th-clr-gray-darken-1);
      color: var(--th-clr-disabled-text);
    }
  }

  &:focus-within {
    outline-offset: 0.1rem;
  }
}
